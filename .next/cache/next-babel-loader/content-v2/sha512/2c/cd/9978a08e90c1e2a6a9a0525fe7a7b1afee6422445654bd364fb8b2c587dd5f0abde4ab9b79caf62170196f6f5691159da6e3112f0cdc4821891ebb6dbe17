{"ast":null,"code":"import _defineProperty from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\n\nvar MovieCreateForm = function MovieCreateForm(props) {\n  var _useState = useState(false),\n      isInitialDataLoaded = _useState[0],\n      setIsInitialDataLoaded = _useState[1];\n\n  var defaultData = {\n    name: \"\",\n    description: \"\",\n    rating: \"\",\n    image: \"\",\n    cover: \"\",\n    longDesc: \"\"\n  };\n  var formData = props.initialData ? _objectSpread({}, props.initialData) : defaultData;\n\n  var _useState2 = useState(formData),\n      form = _useState2[0],\n      setForm = _useState2[1]; //   useEffect(() => {\n  //     if (props.initialData) {\n  //       setForm(props.initialData);\n  //       setIsInitialDataLoaded(true);\n  //     }\n  //   }, [isInitialDataLoaded]);\n\n\n  var handleChange = function handleChange(event) {\n    var target = event.target;\n    var name = target.name;\n    setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, name, target.value)));\n  };\n\n  var handleGenreChange = function handleGenreChange(event) {\n    var options = event.target.options;\n    var optionsLength = options.length;\n    var value = [];\n\n    for (var i = 0; i < optionsLength; i++) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      genre: value.toString()\n    }));\n  };\n\n  var submitForm = function submitForm() {\n    props.handleFormSubmit(_objectSpread({}, form));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", null, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"name\"\n  }, \"Nome\"), __jsx(\"input\", {\n    value: form.name,\n    onChange: handleChange,\n    name: \"name\",\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Star Wars\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"description\"\n  }, \"Descri\\xE7\\xE3o\"), __jsx(\"input\", {\n    value: form.description,\n    onChange: handleChange,\n    name: \"description\",\n    type: \"text\",\n    className: \"form-control\",\n    id: \"description\",\n    placeholder: \"Em algum em uma gal\\xE1xia distante...\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"description\"\n  }, \"M\\xE9dia\"), __jsx(\"input\", {\n    value: form.rating,\n    onChange: handleChange,\n    name: \"rating\",\n    type: \"number\",\n    max: \"5\",\n    min: \"0\",\n    className: \"form-control\",\n    id: \"rating\",\n    placeholder: \"3\"\n  }), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\"\n  }, \"Max: 5, Min: 0\", \" \")), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"image\"\n  }, \"Image\"), __jsx(\"input\", {\n    value: form.image,\n    onChange: handleChange,\n    name: \"image\",\n    type: \"text\",\n    className: \"form-control\",\n    id: \"image\",\n    placeholder: \"http://.....\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"cover\"\n  }, \"Cover\"), __jsx(\"input\", {\n    value: form.cover,\n    onChange: handleChange,\n    name: \"cover\",\n    type: \"text\",\n    className: \"form-control\",\n    id: \"cover\",\n    placeholder: \"http://......\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"longDesc\"\n  }, \"Descri\\xE7\\xE3o completa\"), __jsx(\"textarea\", {\n    value: form.longDesc,\n    onChange: handleChange,\n    name: \"longDesc\",\n    className: \"form-control\",\n    id: \"longDesc\",\n    rows: \"3\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"genre\"\n  }, \"Genre\"), __jsx(\"select\", {\n    onChange: handleGenreChange,\n    multiple: true,\n    className: \"form-control\",\n    id: \"genre\"\n  }, __jsx(\"option\", null, \"Drama\"), __jsx(\"option\", null, \"A\\xE7\\xE3o\"), __jsx(\"option\", null, \"Aventura\"), __jsx(\"option\", null, \"Document\\xE1rio\"), __jsx(\"option\", null, \"M\\xFAsical\"))), __jsx(\"button\", {\n    onClick: submitForm,\n    type: \"button\",\n    className: \"btn btn-outline-dark\"\n  }, props.submitButton || \"Criar\")));\n};\n\nexport default MovieCreateForm;","map":null,"metadata":{},"sourceType":"module"}