{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROJETOS\\\\react-next-movie-app\\\\pages\\\\movies\\\\[id]\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { environment, getMovieById, deleteMovie } from \"../../../actions\";\nimport Link from \"next/link\";\n\nconst Movie = props => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    movie\n  } = props;\n\n  const handleDeleteMovie = id => {\n    deleteMovie(id).then(() => {\n      router.push(\"/\");\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: `https://image.tmdb.org/t/p/original${movie.backdrop_path}`,\n    className: \"img-fluid\",\n    alt: movie.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"display-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, movie.title), __jsx(\"p\", {\n    className: \"lead c-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, movie.tagline), __jsx(\"hr\", {\n    className: \"my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"list-group-horizontal-sm mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, movie.genres.map(genre => __jsx(\"span\", {\n    key: genre.id,\n    className: \"badge badge-pill badge-dark mr-1 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, genre.name))), movie.homepage && __jsx(\"a\", {\n    className: \"btn btn-outline-dark btn-lg mr-1\",\n    href: movie.homepage,\n    target: \"_blank\",\n    role: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Learn more\"), environment === \"dev\" && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    onClick: () => handleDeleteMovie(id),\n    className: \"btn btn-outline-danger btn-lg mr-1\",\n    href: \"#\",\n    role: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Delete\"), __jsx(Link, {\n    href: \"/movies/[id]/edit\",\n    as: `/movies/${id}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-outline-warning btn-lg\",\n    role: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Edit\")))), __jsx(\"p\", {\n    className: \"lead c-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, movie.overview)));\n};\n\nMovie.getInitialProps = async ({\n  query\n}) => {\n  const movie = await getMovieById(query.id);\n  return {\n    movie\n  };\n};\n\nexport default Movie;","map":{"version":3,"sources":["C:/PROJETOS/react-next-movie-app/pages/movies/[id]/index.js"],"names":["useRouter","environment","getMovieById","deleteMovie","Link","Movie","props","router","id","query","movie","handleDeleteMovie","then","push","backdrop_path","title","tagline","genres","map","genre","name","homepage","overview","getInitialProps"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { environment, getMovieById, deleteMovie } from \"../../../actions\";\r\nimport Link from \"next/link\";\r\n\r\nconst Movie = (props) => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const { movie } = props;\r\n\r\n  const handleDeleteMovie = (id) => {\r\n    deleteMovie(id).then(() => {\r\n      router.push(\"/\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"container\">\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\r\n          className=\"img-fluid\"\r\n          alt={movie.title}\r\n        ></img>\r\n        <div className=\"jumbotron\">\r\n          <h1 className=\"display-4\">{movie.title}</h1>\r\n          <p className=\"lead c-dark\">{movie.tagline}</p>\r\n          <hr className=\"my-4\" />\r\n\r\n          <div className=\"list-group-horizontal-sm mb-4\">\r\n            {movie.genres.map((genre) => (\r\n              <span\r\n                key={genre.id}\r\n                className=\"badge badge-pill badge-dark mr-1 mt-1\"\r\n              >\r\n                {genre.name}\r\n              </span>\r\n            ))}\r\n          </div>\r\n\r\n          {movie.homepage && (\r\n            <a\r\n              className=\"btn btn-outline-dark btn-lg mr-1\"\r\n              href={movie.homepage}\r\n              target=\"_blank\"\r\n              role=\"button\"\r\n            >\r\n              Learn more\r\n            </a>\r\n          )}\r\n          {environment === \"dev\" && (\r\n            <React.Fragment>\r\n              <button\r\n                onClick={() => handleDeleteMovie(id)}\r\n                className=\"btn btn-outline-danger btn-lg mr-1\"\r\n                href=\"#\"\r\n                role=\"button\"\r\n              >\r\n                Delete\r\n              </button>\r\n              <Link href=\"/movies/[id]/edit\" as={`/movies/${id}/edit`}>\r\n                <button\r\n                  className=\"btn btn-outline-warning btn-lg\"\r\n                  role=\"button\"\r\n                >\r\n                  Edit\r\n                </button>\r\n              </Link>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <p className=\"lead c-white\">{movie.overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovie.getInitialProps = async ({ query }) => {\r\n  const movie = await getMovieById(query.id);\r\n  return { movie };\r\n};\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}