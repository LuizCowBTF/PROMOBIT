{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport MovieCreateForm from \"../../../components/movieCreateForm\";\nimport { getMovieById, updateMovie } from \"../../../actions\";\nimport Router from \"next/router\";\n\nclass EditMovie extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleUpdateMovie\", movie => {\n      updateMovie(movie).then(() => {\n        Router.push(\"/movies/[id]\", `/movies/${movie.id}`);\n      });\n    });\n  }\n\n  static async getInitialProps({\n    query\n  }) {\n    const movie = await getMovieById(query.id);\n    return {\n      movie\n    };\n  }\n\n  render() {\n    const {\n      movie\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"container-fluid\"\n    }, __jsx(\"h1\", null, \"Editar filmes\"), __jsx(MovieCreateForm, {\n      submitButton: \"Update\",\n      initialData: movie,\n      handleFormSubmit: this.handleUpdateMovie\n    }));\n  }\n\n}\n\nexport default EditMovie;","map":null,"metadata":{},"sourceType":"module"}