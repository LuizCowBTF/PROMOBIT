{"ast":null,"code":"import _toConsumableArray from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport axios from \"axios\";\nexport var environment = \"prod\";\nvar dev = {\n  url: \"http://localhost:3000\"\n};\nvar prod = {\n  url: \"https://api.themoviedb.org/3\",\n  // api_key: process.env.API_ENV,\n  api_key: \"a6e3a68c3b13fa67916e7f4ce66a8290\",\n  language: \"pt-br\"\n};\nvar CATEGORY_DATA = [{\n  id: 0,\n  name: \"Todos\"\n}, {\n  id: 28,\n  name: \"Action\"\n}, {\n  id: 12,\n  name: \"Adventure\"\n}, {\n  id: 16,\n  name: \"Animation\"\n}, {\n  id: 35,\n  name: \"Comedy\"\n}, {\n  id: 80,\n  name: \"Crime\"\n}, {\n  id: 99,\n  name: \"Documentary\"\n}, {\n  id: 18,\n  name: \"Drama\"\n}, {\n  id: 10751,\n  name: \"Family\"\n}, {\n  id: 14,\n  name: \"Fantasy\"\n}, {\n  id: 36,\n  name: \"History\"\n}, {\n  id: 27,\n  name: \"Horror\"\n}, {\n  id: 10402,\n  name: \"Music\"\n}, {\n  id: 9648,\n  name: \"Mystery\"\n}, {\n  id: 10749,\n  name: \"Romance\"\n}, {\n  id: 878,\n  name: \"Science Fiction\"\n}, {\n  id: 10770,\n  name: \"TV\"\n}, {\n  id: 53,\n  name: \"Thriller\"\n}, {\n  id: 10752,\n  name: \"War\"\n}, {\n  id: 37,\n  name: \"Western\"\n}];\nexport var getCategories = function getCategories() {\n  if (environment === \"prod\") {\n    return axios.get(\"\".concat(prod.url, \"/genre/movie/list?api_key=\").concat(prod.api_key, \"&language=\").concat(prod.language)).then(function (res) {\n      var categories = [{\n        id: 0,\n        name: \"Todos\"\n      }];\n      categories.push.apply(categories, _toConsumableArray(res.data.genres));\n      return categories;\n    })[\"catch\"](function (error) {\n      console.error(\"getCategories\", error);\n    });\n  } else {\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        try {\n          resolve(CATEGORY_DATA);\n        } catch (error) {\n          reject(\"Cannot fetch data: \".concat(error));\n        }\n      }, 200);\n    });\n  }\n};\nexport var getMovies = function getMovies() {\n  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n  if (environment === \"prod\") {\n    return axios.get(\"\".concat(prod.url, \"/movie/popular?api_key=\").concat(prod.api_key, \"&language=\").concat(prod.language, \"&page=\").concat(page)).then(function (res) {\n      if (res.data && res.data.results) return res.data.results;else return [];\n    })[\"catch\"](function (error) {\n      console.error(\"getMovies\", error);\n      return [];\n    });\n  } else {\n    return axios.get(\"\".concat(dev.url, \"/api/v1/movies\")).then(function (res) {\n      return res.data.results;\n    });\n  }\n};\nexport var createMovie = function createMovie(movie) {\n  movie.id = Math.random().toString(36).substr(2, 7);\n  return axios.post(\"\".concat(dev.url, \"/api/v1/movies\"), movie).then(function (res) {\n    return res.data;\n  });\n};\nexport var getMovieById = function getMovieById(id) {\n  if (environment === \"prod\") {\n    return axios.get(\"\".concat(prod.url, \"/movie/\").concat(id, \"?api_key=\").concat(prod.api_key, \"&language=\").concat(prod.language)).then(function (res) {\n      return res.data;\n    })[\"catch\"](function (error) {\n      console.error(\"getMovieById\", error);\n    });\n  } else {\n    return axios.get(\"\".concat(dev.url, \"/api/v1/movies/\").concat(id)).then(function (res) {\n      return res.data;\n    });\n  }\n};\nexport var updateMovie = function updateMovie(movie) {\n  return axios.patch(\"\".concat(dev.url, \"/api/v1/movies/\").concat(movie.id), movie).then(function (res) {\n    return res.data;\n  });\n};\nexport var deleteMovie = function deleteMovie(id) {\n  return axios[\"delete\"](\"\".concat(dev.url, \"/api/v1/movies/\").concat(id)).then(function (res) {\n    return res.data;\n  });\n};","map":null,"metadata":{},"sourceType":"module"}