{"ast":null,"code":"import _classCallCheck from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\PROJETOS\\\\react-next-movie-app\\\\components\\\\movieList.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Link from \"next/link\";\n\nvar MovieList = /*#__PURE__*/function (_React$Component) {\n  _inherits(MovieList, _React$Component);\n\n  var _super = _createSuper(MovieList);\n\n  function MovieList() {\n    var _this;\n\n    _classCallCheck(this, MovieList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"shorten\", function (text, maxLength) {\n      if (text && text.length > maxLength) {\n        return text.substr(0, maxLength) + \"...\";\n      }\n\n      return text;\n    });\n\n    return _this;\n  }\n\n  _createClass(MovieList, [{\n    key: \"renderMovies\",\n    value: function renderMovies(movies) {\n      var _this2 = this;\n\n      return movies.map(function (movie) {\n        return __jsx(\"div\", {\n          key: movie.id,\n          className: \"col-lg-3 col-md-6 mb-4\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 7\n          }\n        }, __jsx(\"div\", {\n          className: \"card h-100\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 9\n          }\n        }, __jsx(Link, {\n          href: \"/movies/[id]\",\n          as: \"/movies/\".concat(movie.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 11\n          }\n        }, __jsx(\"a\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }\n        }, __jsx(\"img\", {\n          className: \"card-img-top\",\n          src: \"https://image.tmdb.org/t/p/original\".concat(movie.poster_path),\n          alt: movie.title,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }\n        }))), __jsx(\"div\", {\n          className: \"card-body\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }\n        }, __jsx(\"h4\", {\n          className: \"card-title\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }\n        }, __jsx(Link, {\n          href: \"/movies/[id]\",\n          as: \"/movies/\".concat(movie.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }\n        }, __jsx(\"a\", {\n          className: \"text-dark\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }\n        }, movie.title))), __jsx(\"div\", {\n          className: \"movie-genre text-muted\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }\n        }, movie.genre), __jsx(\"p\", {\n          className: \"card-text\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }\n        }, _this2.shorten(movie.overview, 100)), __jsx(\"p\", {\n          className: \"card-text\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }\n        }, __jsx(\"small\", {\n          className: \"text-muted\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }\n        }, \"Release date: \".concat(movie.release_date)))), __jsx(\"div\", {\n          className: \"card-footer\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }\n        }, __jsx(\"small\", {\n          className: \"text-muted\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        }, movie.vote_average))));\n      });\n    } // TODO: Implement pagination. The themoviedb api is prepared.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var movies = this.props.movies;\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 12\n        }\n      }, this.renderMovies(movies));\n    }\n  }]);\n\n  return MovieList;\n}(React.Component);\n\nexport default MovieList;","map":{"version":3,"sources":["C:/PROJETOS/react-next-movie-app/components/movieList.js"],"names":["React","Link","MovieList","text","maxLength","length","substr","movies","map","movie","id","poster_path","title","genre","shorten","overview","release_date","vote_average","props","renderMovies","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Link from \"next/link\";\r\n\r\nclass MovieList extends React.Component {\r\n  shorten = (text, maxLength) => {\r\n    if (text && text.length > maxLength) {\r\n      return text.substr(0, maxLength) + \"...\";\r\n    }\r\n    return text;\r\n  };\r\n\r\n  renderMovies(movies) {\r\n    return movies.map((movie) => (\r\n      <div key={movie.id} className=\"col-lg-3 col-md-6 mb-4\">\r\n        <div className=\"card h-100\">\r\n          <Link href=\"/movies/[id]\" as={`/movies/${movie.id}`}>\r\n            <a>\r\n              <img\r\n                className=\"card-img-top\"\r\n                src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\r\n                alt={movie.title}\r\n              />\r\n            </a>\r\n          </Link>\r\n          <div className=\"card-body\">\r\n            <h4 className=\"card-title\">\r\n              <Link href=\"/movies/[id]\" as={`/movies/${movie.id}`}>\r\n                <a className=\"text-dark\">{movie.title}</a>\r\n              </Link>\r\n            </h4>\r\n            <div className=\"movie-genre text-muted\">{movie.genre}</div>\r\n            <p className=\"card-text\">{this.shorten(movie.overview, 100)}</p>\r\n            <p className=\"card-text\">\r\n              <small className=\"text-muted\">{`Release date: ${movie.release_date}`}</small>\r\n            </p>\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <small className=\"text-muted\">{movie.vote_average}</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  // TODO: Implement pagination. The themoviedb api is prepared.\r\n\r\n  render() {\r\n    const { movies } = this.props;\r\n    return <React.Fragment>{this.renderMovies(movies)}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default MovieList;\r\n"]},"metadata":{},"sourceType":"module"}