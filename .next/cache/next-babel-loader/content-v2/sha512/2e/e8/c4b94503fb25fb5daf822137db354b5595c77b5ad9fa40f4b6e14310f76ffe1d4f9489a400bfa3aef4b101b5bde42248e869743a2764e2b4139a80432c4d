{"ast":null,"code":"import _classCallCheck from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/PROJETOS/react-next-movie-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Link from \"next/link\";\n\nvar MovieList = /*#__PURE__*/function (_React$Component) {\n  _inherits(MovieList, _React$Component);\n\n  var _super = _createSuper(MovieList);\n\n  function MovieList() {\n    var _this;\n\n    _classCallCheck(this, MovieList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"shorten\", function (text, maxLength) {\n      if (text && text.length > maxLength) {\n        return text.substr(0, maxLength) + \"...\";\n      }\n\n      return text;\n    });\n\n    return _this;\n  }\n\n  _createClass(MovieList, [{\n    key: \"renderMovies\",\n    value: function renderMovies(movies) {\n      var _this2 = this;\n\n      return movies.map(function (movie) {\n        return __jsx(\"div\", {\n          key: movie.id,\n          className: \"col-lg-3 col-md-6 mb-4\"\n        }, __jsx(\"div\", {\n          className: \"card h-100\"\n        }, __jsx(Link, {\n          href: \"/movies/[id]\",\n          as: \"/movies/\".concat(movie.id)\n        }, __jsx(\"a\", null, __jsx(\"img\", {\n          className: \"card-img-top\",\n          src: \"https://image.tmdb.org/t/p/original\".concat(movie.poster_path),\n          alt: movie.title\n        }))), __jsx(\"div\", {\n          className: \"card-body\"\n        }, __jsx(\"h4\", {\n          className: \"card-title\"\n        }, __jsx(Link, {\n          href: \"/movies/[id]\",\n          as: \"/movies/\".concat(movie.id)\n        }, __jsx(\"a\", {\n          className: \"text-dark\"\n        }, movie.title))), __jsx(\"div\", {\n          className: \"movie-genre text-muted\"\n        }, movie.genre), __jsx(\"p\", {\n          className: \"card-text\"\n        }, _this2.shorten(movie.overview, 100)), __jsx(\"p\", {\n          className: \"card-text\"\n        }, __jsx(\"small\", {\n          className: \"text-muted\"\n        }, \"Release date: \".concat(movie.release_date)))), __jsx(\"div\", {\n          className: \"card-footer\"\n        }, __jsx(\"small\", {\n          className: \"text-muted\"\n        }, movie.vote_average))));\n      });\n    } // TODO: Implement pagination. The themoviedb api is prepared.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var movies = this.props.movies;\n      return __jsx(React.Fragment, null, this.renderMovies(movies));\n    }\n  }]);\n\n  return MovieList;\n}(React.Component);\n\nexport default MovieList;","map":null,"metadata":{},"sourceType":"module"}